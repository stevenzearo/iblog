subprojects {
    apply plugin: 'java'


    repositories {
        mavenCentral()
    }

    dependencies {
        implementation("javax.validation:validation-api:$javaxValidationVersion")
        compile("javax.xml.bind:jaxb-api:$javaxVersion")
        compile("com.sun.xml.bind:jaxb-impl:$javaxVersion")
        compile("org.glassfish.jaxb:jaxb-runtime:$javaxVersion")
        compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
        compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
        compile("org.springframework.boot:spring-boot-starter-logging:$springBootVersion")
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
        testImplementation("junit:junit:$junitVersion")
        implementation(project(':common:common-lib'))
    }
}

project('bo-iblog-site') {
    dependencies {
        implementation(project(':frontend:bo-iblog-site-interface'))
        implementation(project(':backend:user-service-interface'))
        implementation(project(':backend:blog-service-interface'))
        implementation(project(':backend:stock-service-interface'))
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudVersion")
        implementation("redis.clients:jedis:$jedisVersion")
        implementation("org.springframework.data:spring-data-redis:$springDataVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springCloudVersion")
    }
}

project('iblog-site') {
    dependencies {
        implementation(project(':backend:user-service-interface'))
        implementation(project(':backend:blog-service-interface'))
        implementation(project(':backend:stock-service-interface'))
        implementation(project(':frontend:iblog-site-interface'))
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudVersion")
        implementation("redis.clients:jedis:$jedisVersion")
        implementation("org.springframework.data:spring-data-redis:$springDataVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springCloudVersion")
        implementation("org.springframework.boot:spring-boot-starter-websocket:$springBootVersion")
    }
}

project('registry-site') {
    dependencies {
        implementation("org.springframework.cloud:spring-cloud-starter:$springCloudVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-config:$springCloudVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:$springCloudVersion"){
            exclude group: 'com.google.code.gson', module: 'gson'
        }
    }
}

configure(subprojects.findAll { it.name.endsWith('-interface') }) {
    dependencies {
        implementation(project(':common:common-lib'))
    }
}