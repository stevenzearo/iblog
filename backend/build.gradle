def javaxVersion = '2.3.1'
def springBootVersion = '2.2.5.RELEASE'
def springCloudVersion = '2.2.2.RELEASE'
def mysqlVersion = '8.0.16'
def mybatisVersion = '2.1.2'
subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile(group: 'javax.xml.bind', name: 'jaxb-api', version: javaxVersion)
        compile(group: 'com.sun.xml.bind', name: 'jaxb-impl', version: javaxVersion)
        compile(group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: javaxVersion)
        compile project(':common:common-lib')
    }
}

project('blog-service-interface') {
    dependencies {
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion)

        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: springCloudVersion)
        compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: springCloudVersion
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: springCloudVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: springCloudVersion)
    }
}

project('blog-service') {
    dependencies {
        compile(project(':backend:blog-service-interface'))
        compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: mybatisVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: springBootVersion)
        compile(group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion)
        compile (group: 'org.springframework.data', name: 'spring-data-mongodb', version: springBootVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: springCloudVersion) {
            exclude group: 'com.google.code.gson', module: 'gson'
        }

        testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

project('stock-service-interface') {
    dependencies {
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion)

        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: springCloudVersion)
        compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: springCloudVersion
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: springCloudVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: springCloudVersion)
    }
}

project('stock-service') {
    dependencies {
        compile(project(':backend:stock-service-interface'))
        compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: mybatisVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: springBootVersion)
        compile(group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: springCloudVersion) {
            exclude group: 'com.google.code.gson', module: 'gson'
        }
        compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

        testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}


project('stock-service-db-migration') {
    dependencies {
        compile(group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion)
    }
}

project('user-service-interface') {
    dependencies {
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion)

        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: springCloudVersion)
        compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: springCloudVersion
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: springCloudVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: springCloudVersion)
    }
}
project('user-service') {
    dependencies {
        compile(project(':backend:user-service-interface'))
        compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: mybatisVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: springBootVersion)
        compile(group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBootVersion)
        compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion)
        compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: springCloudVersion) {
            exclude group: 'com.google.code.gson', module: 'gson'
        }

        testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}


project('user-service-db-migration') {
    dependencies {
        compile(group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion)
    }
}