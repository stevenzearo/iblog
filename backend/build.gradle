subprojects {
    apply plugin: 'java'

    def springBootVersion = '2.1.9.RELEASE'
    def springCloudVersion = '2.2.0.RELEASE'
    def mysqlVersion = '8.0.16'
    def mybatisVersion = '2.1.1'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: mybatisVersion
        compile group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: springBootVersion, ext: 'pom'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion

        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: springCloudVersion
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: springCloudVersion
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: springCloudVersion
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-stream-kafka', version: springCloudVersion
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: springCloudVersion
        compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: springCloudVersion

        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

project('blog-service') {
    dependencies {
        compile project(':backend:blog-service-interface')
    }
}

project('user-service') {
    dependencies {
        compile project(':backend:user-service-interface')
    }
}


project('user-service-db-migration') {
    dependencies {
    }
}